name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      # Instalar dependencias y construir la aplicación
      - name: Install dependencies
        run: npm install

      - name: Build application
        run: npm run build

      # Crear un archivo ZIP que excluya node_modules
      - name: Create ZIP file
        run: |
          zip -r app.zip . -x "node_modules/*" "dist/node_modules/*"

      # Subir el archivo ZIP a Azure Static Web Apps
      - name: Deploy to Azure Static Web Apps
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_<GENERATED_HOSTNAME> }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "/" # App source code path (raíz del repositorio)
          api_location: "" # Api source code path - optional (vacío si no tienes API)
          output_location: "dist/assets/" # Built app content directory (archivos estáticos en dist/assets/)
          artifact_location: "app.zip" # Especifica el archivo ZIP generado

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_<GENERATED_HOSTNAME> }}
          action: "close"
